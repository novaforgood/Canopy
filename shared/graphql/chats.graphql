# Get all chats, including latest message of each chat
subscription AllChatRooms($profile_id: uuid!) {
  chat_room(
    where: { profile_to_chat_rooms: { profile_id: { _eq: $profile_id } } }
    order_by: { chat_messages_aggregate: { max: { id: desc } } }
  ) {
    id
    created_at
    profile_to_chat_rooms {
      id
      latest_read_chat_message_id
      profile {
        id
        user {
          id
          first_name
          last_name
          type
        }
        profile_listing {
          id
          headline
          profile_listing_image {
            id
            image {
              url
              id
            }
          }
        }
      }
    }
    chat_messages(limit: 1, order_by: { id: desc }) {
      id
      text
      sender_profile_id
      created_at
    }
  }
}

query ChatRoom($chat_room_id: uuid!) {
  chat_room_by_pk(id: $chat_room_id) {
    id
    created_at
    first_chat_message: chat_messages(limit: 1, order_by: { id: asc }) {
      id
      text
      sender_profile_id
      created_at
    }
    profile_to_chat_rooms {
      id
      latest_read_chat_message_id
      profile {
        user {
          id
          first_name
          last_name
          type
        }
        id
        profile_listing {
          id
          headline
          profile_listing_image {
            id
            image {
              url
              id
            }
          }
        }
      }
    }
  }
}

# Get messages
subscription MessagesStream($chat_room_id: uuid!, $after: timestamptz!) {
  chat_message_stream(
    batch_size: 10
    cursor: { initial_value: { id: 0 } }
    where: {
      chat_room_id: { _eq: $chat_room_id }
      created_at: { _gte: $after }
    }
  ) {
    id
    deleted
    chat_room_id
    sender_profile_id
    text
    created_at
  }
}
# Identical query (see https://github.com/FormidableLabs/urql/discussions/2257)
query Messages($chat_room_id: uuid!, $limit: Int!, $id_cap: bigint!) {
  chat_message(
    limit: $limit
    order_by: { id: desc }
    where: { chat_room_id: { _eq: $chat_room_id }, id: { _lt: $id_cap } }
  ) {
    id
    deleted
    chat_room_id
    sender_profile_id
    text
    created_at
  }
}

# Send a message

mutation SendMessage($input: chat_message_insert_input!) {
  insert_chat_message_one(object: $input) {
    id
    deleted
    created_at
    chat_room_id
    text
    sender_profile_id
  }
}

# Updated latest read message
mutation UpdateLatestReadMessage(
  $id: uuid!
  $latest_read_chat_message_id: bigint!
) {
  update_profile_to_chat_room_by_pk(
    pk_columns: { id: $id }
    _set: { latest_read_chat_message_id: $latest_read_chat_message_id }
  ) {
    id
    latest_read_chat_message_id
  }
}
