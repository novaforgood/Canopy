query GetInviteLink($invite_link_id: uuid!) {
  space_invite_link_by_pk(id: $invite_link_id) {
    id
    expires_at
    created_at
    space_id
    type
  }
}

mutation UpsertUser(
  $id: String!
  $email: String!
  $first_name: String
  $last_name: String
  $last_active_at: timestamptz
  $update_columns: [user_update_column!]!
) {
  insert_user_one(
    object: {
      id: $id
      email: $email
      first_name: $first_name
      last_name: $last_name
      last_active_at: $last_active_at
    }
    on_conflict: { constraint: users_pkey, update_columns: $update_columns }
  ) {
    email
    id
    first_name
    last_name
  }
}

mutation InsertProfile(
  $data: profile_insert_input!
  $on_conflict: profile_on_conflict
) {
  insert_profile_one(object: $data, on_conflict: $on_conflict) {
    id
    user_id
    space_id
  }
}

mutation InsertImage($data: image_insert_input!) {
  insert_image_one(object: $data) {
    id
    url
  }
}

query GetProfile($profile_id: uuid!) {
  profile_by_pk(id: $profile_id) {
    id
    profile_listing {
      id
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
    user {
      id
      first_name
      last_name
      email
    }
    space {
      id
      name
      slug
    }
  }
}

query GetChatRoom($where: chat_room_bool_exp) {
  chat_room(where: $where) {
    id
  }
}

mutation InsertChatRoomOne($data: chat_room_insert_input!) {
  insert_chat_room_one(object: $data) {
    id
    profile_to_chat_rooms {
      id
      profile {
        id
        space {
          id
          name
          slug
        }
      }
    }
  }
}

mutation InsertConnectionRequest($data: connection_request_insert_input!) {
  insert_connection_request_one(object: $data) {
    id
    sender_profile_id
    receiver_profile_id
    created_at
    status
  }
}

query GetProfiles($where: profile_bool_exp) {
  profile(where: $where) {
    id
    user {
      id
      first_name
      last_name
      email
    }
    space {
      id
      name
      slug
    }
    flattened_profile_roles {
      id
      profile_id
      profile_role
    }
    profile_listing {
      id
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
  }
}

query GetUnreadMessagesCounts {
  profile(
    where: { unread_messages_counts: { unread_messages_count: { _gt: 0 } } }
  ) {
    id
    unread_messages_counts {
      unread_messages_count
      sender_profile {
        id
        user {
          id
          first_name
          last_name
          email
        }
        profile_listing {
          id
          headline
          profile_listing_image {
            id
            image {
              id
              url
            }
          }
        }
      }
    }
  }
}

mutation InsertChatIntro($data: chat_intro_insert_input!) {
  insert_chat_intro_one(object: $data) {
    id
    created_at
    creator_profile_id
    group_size
    num_groups_created
    space_id
  }
}

mutation InsertAnnouncement($object: announcement_insert_input!) {
  insert_announcement_one(object: $object) {
    id
    author_profile_id
    created_at
    deleted
    content
  }
}

query EmailsBySpaceId($_user_attr_filter: jsonb!, $_space_id: uuid!) {
  profile(
    where: {
      user: { _not: { attributes: { _contains: $_user_attr_filter } } }
      space: { id: { _eq: $_space_id } }
    }
  ) {
    id
    user {
      id
      email
      type
    }
  }
}

mutation InsertReport($data: report_insert_input!) {
  insert_report_one(object: $data) {
    id
  }
}
