# Dump uncategorized queries here

query User($id: String!) {
  user_by_pk(id: $id) {
    id
    email
    first_name
    last_name
    attributes
    expo_push_token
  }
}

mutation UpdateUser($id: String!, $changes: user_set_input!) {
  update_user_by_pk(pk_columns: { id: $id }, _set: $changes) {
    id
    first_name
    last_name
  }
}

query AllProfilesOfUser($user_id: String!) {
  profile(where: { user_id: { _eq: $user_id } }) {
    id
    attributes
    profile_roles {
      id
      profile_role
    }
    profile_listing {
      id
      public
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
      profile_listing_to_space_tags(
        where: { space_tag: { status: { _neq: Deleted } } }
      ) {
        id
        space_tag_id
        space_tag {
          id
          space_tag_category_id
          label
        }
      }
      profile_listing_responses(
        where: { space_listing_question: { deleted: { _eq: false } } }
      ) {
        id
        response_html
        space_listing_question {
          id
          title
          description
        }
      }
    }
    flattened_profile_roles {
      id
      profile_id
      profile_role
    }
    space {
      id
      owner_id
      name
      slug
      space_cover_image {
        id
        image {
          id
          url
        }
      }
    }
    user {
      id
      email
      first_name
      last_name
    }
    last_read_announcement_id
  }
}

query SpaceBySlug($slug: String!) {
  space(where: { slug: { _eq: $slug } }) {
    id
    name
    description_html
    slug
    owner_id
    attributes
    space_listing_questions(
      order_by: { listing_order: asc }
      where: { deleted: { _eq: false } }
    ) {
      char_count
      id
      space_id
      title
      listing_order
      description
      deleted
    }
    space_tag_categories(
      order_by: { listing_order: asc }
      where: { deleted: { _eq: false } }
    ) {
      id
      title
      deleted
      space_id
      listing_order
      rigid_select
      space_tags(order_by: { listing_order: asc }) {
        id
        label
        listing_order
        status
      }
    }
    space_cover_image {
      id
      image {
        id
        url
      }
    }
  }
}

mutation CreateOwnerProfileInNewSpace(
  $user_id: String!
  $space: space_insert_input!
) {
  insert_profile_one(
    object: {
      space: { data: $space }
      profile_roles: { data: { profile_role: Admin } }
      user_id: $user_id
    }
  ) {
    id
    space_id
    user_id
    space {
      id
      name
      description_html
      slug
      owner_id
      space_listing_questions(order_by: { listing_order: asc }) {
        char_count
        id
        space_id
        title
        description
        deleted
      }
      space_cover_image {
        id
        image {
          id
          url
        }
      }
    }
  }
}

query ProfilesBySpaceId($space_id: uuid!) {
  profile(where: { space_id: { _eq: $space_id } }) {
    id
    user {
      id
      type
      first_name
      last_name
      email
    }
    profile_roles {
      id
      profile_role
    }
    profile_listing {
      id
      public
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
    space_id
    user_id
    created_at
  }
}

query SpaceTagCategories($space_id: uuid!) {
  space_tag_category(where: { space_id: { _eq: $space_id } }) {
    id
    title
    deleted
    space_id
    listing_order
    rigid_select
    space_tags(order_by: { listing_order: asc }) {
      id
      label
      listing_order
      status
    }
  }
}

query ProfileListingToSpaceTag($profile_id: uuid!) {
  profile_listing_to_space_tag(
    where: {
      profile_listing: { profile_id: { _eq: $profile_id } }
      space_tag: { status: { _neq: Deleted } }
    }
  ) {
    id
    profile_listing_id
    space_tag_id
    space_tag {
      id
      label
      space_tag_category_id
      status
    }
  }
}

query SpaceTags($space_tag_category_id: uuid!) {
  space_tag(
    where: {
      space_tag_category_id: { _eq: $space_tag_category_id }
      status: { _neq: Deleted }
    }
  ) {
    id
    label
    space_tag_category {
      id
      space_id
      title
    }
  }
}

query ProfileListingsInSpace($where: profile_listing_bool_exp) {
  profile_listing(where: $where) {
    id
    public
    headline
    profile_listing_image {
      id
      image {
        id
        url
      }
    }
    profile_listing_to_space_tags(
      where: { space_tag: { status: { _neq: Deleted } } }
    ) {
      id
      space_tag_id
      space_tag {
        id
        label
      }
    }
    profile {
      id
      user {
        id
        last_name
        first_name
        email
      }
    }
  }
}

query ProfilesByIds($profile_ids: [uuid!]!) {
  profile(where: { id: { _in: $profile_ids } }) {
    id
    user {
      id
      first_name
      last_name
      email
    }
    profile_roles {
      id
      profile_role
    }
    profile_listing {
      id
      public
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
    }
    space_id
    user_id
    created_at
  }
}

query ProfileById($profile_id: uuid!, $is_logged_in: Boolean!) {
  profile_by_pk(id: $profile_id) {
    id
    created_at
    blocked_by_user
    profile_listing {
      id
      public
      headline
      profile_listing_image {
        id
        image {
          id
          url
        }
      }
      profile_listing_socials {
        id
        link
        type
      }
      profile_listing_responses(
        order_by: { space_listing_question: { listing_order: asc } }
        where: { space_listing_question: { deleted: { _eq: false } } }
      ) {
        id
        response_html
        space_listing_question {
          id
          title
          description
        }
      }
      profile_listing_to_space_tags(
        where: { space_tag: { status: { _neq: Deleted } } }
      ) {
        id
        space_tag_id
        space_tag {
          id
          label
        }
      }
    }
    user {
      id
      first_name
      last_name
      email
    }
    profile_roles {
      id
      profile_role
    }
  }
  profile_to_chat_room(
    where: {
      chat_room: { profile_to_chat_rooms: { profile_id: { _eq: $profile_id } } }
    }
  ) @include(if: $is_logged_in) {
    id
    chat_room_id
    chat_room {
      id
      profile_to_chat_rooms {
        id
      }
    }
  }
}

mutation UpdateProfileRole($profile_role: profile_role_enum!, $row_id: uuid!) {
  update_profile_to_profile_role_by_pk(
    pk_columns: { id: $row_id }
    _set: { profile_role: $profile_role }
  ) {
    id
    profile_role
    profile_id
  }
}

query ProfileListing($profile_listing_id: uuid!) {
  profile_listing_by_pk(id: $profile_listing_id) {
    id
    profile_listing_image {
      id
      image {
        id
        url
      }
    }
    profile_listing_socials {
      id
      link
      type
    }
    profile_listing_responses {
      id
      response_html
      space_listing_question {
        id
        title
      }
    }
    profile_listing_to_space_tags(
      where: { space_tag: { status: { _neq: Deleted } } }
    ) {
      id
      space_tag_id
      space_tag {
        id
        space_tag_category_id
        label
      }
    }
    profile {
      id
      user {
        id
        first_name
        last_name
        email
      }
    }
    public
  }
}

mutation UpsertProfileListing(
  $profile_listing: profile_listing_insert_input!
  $update_columns: [profile_listing_update_column!]!
) {
  insert_profile_listing_one(
    object: $profile_listing
    on_conflict: {
      constraint: profile_listing_profile_id_key
      update_columns: $update_columns
    }
  ) {
    id
    public
    headline
  }
}

mutation UpsertSpaceProfileSchema(
  $space_listing_questions: [space_listing_question_insert_input!]!
  $space_tag_categories: [space_tag_category_insert_input!]!
) {
  insert_space_listing_question(
    objects: $space_listing_questions
    on_conflict: {
      constraint: space_listing_question_pkey
      update_columns: [char_count, listing_order, title, description, deleted]
    }
  ) {
    returning {
      id
      space_id
      listing_order
      char_count
      title
      description
      deleted
    }
  }
  insert_space_tag_category(
    objects: $space_tag_categories
    on_conflict: {
      constraint: space_tag_category_pkey
      update_columns: [listing_order, title, deleted]
    }
  ) {
    returning {
      id
      listing_order
      space_id
      title
      deleted
      space_tags {
        id
        label
        status
        space_tag_category_id
      }
    }
  }
}

mutation UpdateSpace($space_id: uuid!, $variables: space_set_input!) {
  update_space_by_pk(pk_columns: { id: $space_id }, _set: $variables) {
    attributes
    created_at
    description_html
    id
    name
    owner_id
    slug
    space_cover_image {
      id
      image {
        id
        url
      }
    }
  }
}

mutation UpdateSpaceAttributes($space_id: uuid!, $changes: jsonb) {
  update_space_by_pk(
    pk_columns: { id: $space_id }
    _append: { attributes: $changes }
  ) {
    id
    attributes
  }
}

mutation UpdateUserAttributes($user_id: String!, $changes: jsonb) {
  update_user_by_pk(
    pk_columns: { id: $user_id }
    _append: { attributes: $changes }
  ) {
    id
    attributes
  }
}

mutation UpdateProfileAttributes($profile_id: uuid!, $changes: jsonb) {
  update_profile_by_pk(
    pk_columns: { id: $profile_id }
    _append: { attributes: $changes }
  ) {
    id
    attributes
  }
}

mutation UpsertSpaceCoverImage($image_id: uuid!, $space_id: uuid!) {
  insert_space_cover_image_one(
    object: { image_id: $image_id, space_id: $space_id }
    on_conflict: {
      constraint: space_cover_image_space_id_key
      update_columns: [image_id]
    }
  ) {
    id
    image {
      id
      url
    }
    image_id
  }
}

mutation UpdateConnectionRequest(
  $connection_request_id: uuid!
  $variables: connection_request_set_input!
) {
  update_connection_request_by_pk(
    pk_columns: { id: $connection_request_id }
    _set: $variables
  ) {
    id
    created_at
    receiver_profile_id
    sender_profile_id
    status
    updated_at
  }
}

query ConnectionRequests($profile_id: uuid!) {
  connection_request(
    where: {
      _or: [
        { receiver_profile_id: { _eq: $profile_id } }
        { sender_profile_id: { _eq: $profile_id } }
      ]
    }
  ) {
    id
    created_at
    receiver_profile_id
    sender_profile_id
    status
    updated_at
    receiver_profile {
      id
      user {
        id
        first_name
        last_name
        email
      }
      profile_listing {
        id
        profile_listing_image {
          id
          image {
            id
            url
          }
        }
      }
    }
    sender_profile {
      id
      user {
        id
        first_name
        last_name
        email
      }
      profile_listing {
        id
        profile_listing_image {
          id
          image {
            id
            url
          }
        }
      }
    }
  }
}

query PublicSpaceBySlug($slug: String!) {
  public_space(where: { slug: { _eq: $slug } }) {
    id
    name
    slug
  }
}
